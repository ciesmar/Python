using System;
using System.Data;
using System.Data.SqlClient;

public class Program
{
	// funkcja pomocnicza: zwraca n-ty wyraz ci¹gu fibonacciego
	public static int Fibonacci(int n)
	{
		int a=0;
		int b=1;
		int temp;
		for(int i=0;i<n;i++)
		{
			temp=a;
			a=b;
			b=temp+b;
		}
		return a;
	}
	/////////////////////////////////////////////////////////////
    public static void Main()
    {
		// pocz¹tek operacji pobierania danych
		DateTime cacheStart=DateTime.Now;
		
		// odczytane z TextBox na stronie
        int paramID = 5;
        string connectionString ="Data Source=(local);Initial Catalog=Northwind;"
            											+ "Integrated Security=true";
														
        using (SqlConnection conn = new SqlConnection(connectionString))
        {
			// sprawdzenie czy dany rekord istnieje w bazie
			string sql = "SELECT COUNT(*) FROM dbo.fibonacci WHERE ID=@id;";
            SqlCommand cmd = new SqlCommand(sql, conn);
            cmd.Parameters.AddWithValue("@id", paramID);
            try
            {
                conn.Open();
 				int cnt=(int) cmd.ExecuteScalar();		// zwraca liczbe rekordów w bazie dla danego paramID 
				if (cnt<1)	//jeœli rekord nie istnieje to jest zapisywany w bazie
				{	
					cmd.CommandText="INSERT INTO dbo.fibonacci (ID, VALUE, DATE) VALUES (@id, @value, @date);";
					cmd.Parameters.AddWithValue("@id",paramID);
					cmd.Parameters.AddWithValue("@value",Fibonacci(paramID));
					cmd.Parameters.AddWithValue("@date",DateTime.Now);
					
					SqlDataAdapter adapter=new SqlDataAdapter();
					adapter.InsertCommand=cmd;
					adapter.InsertCommand.ExecuteNonQuery();
				}
				// nowe zapytanie zwracaj¹ce dane
				cmd.CommandText="SELECT ID, VALUE, DATE FROM dbo.fibonacci WHERE ID=@num";
				cmd.Parameters.AddWithValue("@id", paramID);
				SqlDataReader reader = cmd.ExecuteReader();
				
				// Odczytanie potrzebnych informacji
				int id=reader.GetInt32(0);
				int fibValue=reader.GetInt32(1);
				
				DateTime date=reader.GetDateTime(2);
				string strDate=date.ToString("yyyy-MM-dd hh:mm:ss");
				
				DateTime cacheStop=DateTime.Now;
				TimeSpan cacheTime=cacheStop-cacheStart;
				string strCacheTime=cacheTime.ToString("hh:mm:ss");
				reader.Close();
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);		//POPRAWIÆ
            }
            Console.ReadLine();			//POPRAWIÆ
        }
    }
}